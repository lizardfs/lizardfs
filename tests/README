LizardFS functional tests
*************************


How to configure testing environment
====================================

Functional tests  need to have  LizardFS  installation  configured on  a single
machine. They are starting up  the filesystem  for each test. To do  it safely,
the testing environment  has to be prepared.  LizardFS provides  a script which
should do everything needed:

    <SOURCE_DIRECTORY>/tests/setup_machine.sh

Script operations:
 -  Creating a new user on the machine: 'lizardfstest';
 -  Granting  him  permissions  to  mount  fuse  filesystems  and  running
        '/bin/sh -c echo 1 > /proc/sys/vm/drop_caches' as a root;
 -  Granting everyone permissions  to run processes as lizardfstests using
        'sudo -u lizardfstest' without any authentication;
 -  Granting  everyone permissions  to run 'sudo pkill -9 -u lizardfstest'
        to kill the tests if something goes wrong;
 -  Creating a 2G ramdisk in '/mnt/ramdisk'.

You also have  to provide directories  which will  be used  for storing chunks.
You have to add entry in file '/etc/lizardfs_tests.conf' like this:

    : ${LIZARDFS_DISKS:="/mnt/disk_one /mnt/disk_two /mnt/disk_three"}

These directories can  be located on one physical disk. However, long run tests
or benchmarks  may  not  work  properly  because of  heavy traffic  generation.
Sanity  checks  don't  have  that  characteristic  but  some test cases require
at least three directories. There should be also about 60GB of free disk space.
Remember that  user 'lizardfstest'  needs permissions  to  write  files in this
directories. All the contents of these directories will be erased during tests.

How to compile the tests
========================

To get use  of tests, LizardFS  has to be compiled with an option ENABLE_TESTS,
e.g.:

    cmake .. -DENABLE_TESTS=YES

Tested  installation  has  to  be  installed. Default  location  for  tests  is
'$HOME/local' but it can be changed in tests config file, e.g.:

    : ${LIZARDFS_ROOT:="$HOME/LizardFS"}

After that the tests are ready to run.

How to launch the tests
=======================

Test binary is installed together with the file system. Path to it is:

    <INSTALL_PREFIX>/bin/lizardfs_tests

Alternatively it can be run from build directory:

    <SOURCE_DIRECTORY>/tests/lizardfs_tests

This binary  runs all  the bash scripts using  googletest framework. This makes
it easy  to generate  a report  after all  the tests. Part  of the  source code
of  it  (list  of  tests) is  generated  automatically  when  tests  are  added
or  removed. Launched  without  any  parameters, it  executes  all  tests  from
a  collection. You  can  choose  which  tests  to  run  using  a  parameter
'--gtest_filter' which selects them using given pattern, e.g.:

    ./lizardfs_tests --gtest_filter='SanityChecks*'

The command above runs all tests from 'SanityChecks' suite.
A binary uses  an interface delivered by googletest which is displayed  after:

    ./lizardfs_tests --help


How to make your own test
=========================

To create a new test just create a file:

    <SOURCE_DIRECTORY>/tests/test_suites/<SUITE>/test_<TEST_NAME>.sh

where:
    <SUITE> is a test suite that you want your test to be a part of.
        Existing test suites:
         -  SanityChecks – basic tests of LizardFS functionality; these tests
                should last a couple of minutes,
         -  SystemTestingSuite – these tests last a couple of hours and perform
                complex verification of LizardFS work;
    <TEST_NAME> is a name of your tests.

Test  which  you  write  are  run  inside  a  kind  of  sandbox. They  use  UID
of  a special  user  lizardfstest,  so  you  can  safely  spawn  any  processes
(they will be killed after the test).
Tests  have  prepared  numerous  bash  functions  and  structures. They  are
implemented in following directory:

    <SOURCE_DIRECTORY>/tests/tools

Merry testing!
