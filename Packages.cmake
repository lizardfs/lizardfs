execute_process(COMMAND dpkg --print-architecture TIMEOUT 1 RESULT_VARIABLE RETURN_CODE OUTPUT_VARIABLE SYSTEM_ARCHITECTURE)
if(NOT RETURN_CODE STREQUAL "0")
  execute_process(COMMAND arch TIMEOUT 1 RESULT_VARIABLE RETURN_CODE OUTPUT_VARIABLE SYSTEM_ARCHITECTURE)
endif()
if(NOT RETURN_CODE STREQUAL "0")
  execute_process(COMMAND uname -m TIMEOUT 1 RESULT_VARIABLE RETURN_CODE OUTPUT_VARIABLE SYSTEM_ARCHITECTURE)
endif()
if(NOT RETURN_CODE STREQUAL "0")
  message(WARNING "Can't check system architecture, using 'i386'")
  set(SYSTEM_ARCHITECTURE "i386")
else()
  string(LENGTH ${SYSTEM_ARCHITECTURE} SA_LENGTH)
  math(EXPR SA_LENGTH "${SA_LENGTH} -1")
  string(SUBSTRING ${SYSTEM_ARCHITECTURE} 0 ${SA_LENGTH} SYSTEM_ARCHITECTURE)
endif()
message(STATUS "SYSTEM_ARCHITECTURE='${SYSTEM_ARCHITECTURE}'")

set(CPACK_GENERATOR TGZ ${GENERATOR_DEB} ${GENERATOR_RPM})
set(CPACK_SOURCE_GENERATOR TGZ)
set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY FALSE)
set(CPACK_PACKAGE_NAME lizardfs)
set(CPACK_PACKAGE_DESCRIPTION_FILE ${CMAKE_SOURCE_DIR}/README)
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "LizardFS is a distributed file system")
set(CPACK_PACKAGE_VENDOR "LizardFS.org")
set(CPACK_PACKAGE_CONTACT "contact@lizardfs.org")
set(CPACK_PACKAGE_VERSION_MAJOR ${PACKAGE_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PACKAGE_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_MICRO ${PACKAGE_VERSION_MICRO})
set(CPACK_PACKAGE_VERSION ${PACKAGE_VERSION})
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_${SYSTEM_ARCHITECTURE}")

if(BUILD_DEB)
  include(ConfigDeb.cmake)
endif()
if(BUILD_RPM)
  include(ConfigRpm.cmake)
endif()

include(CPack)
