# mfschunkserver.cfg(5)

## The label of this chunkserver (for tiering)
# LABEL = _

## User to run daemon as.
# WORKING_USER = @DEFAULT_USER@

## Group to run daemon as (if empty then default user group will be used).
# WORKING_GROUP = @DEFAULT_GROUP@

## Name of process to place in syslog messages (default is mfschunkserver)
# SYSLOG_IDENT = mfschunkserver

## Whether to perform mlockall() to avoid swapping out mfschunkserver.
## process, boolean (0 means "no").
## (Default: 0)
# LOCK_MEMORY = 0

## Nice level to run daemon with (default is -19 if possible).
# NICE_LEVEL = -19

## Where to store data files and daemon lock file:
## (Default: @DATA_PATH@)
# DATA_PATH = @DATA_PATH@

## Delay in seconds before reconnection attempt to the master server after
## disconnection.
## (Default: 5)
# MASTER_RECONNECTION_DELAY = 5

## Local address to use for connecting with the master server.
# BIND_HOST = *

## LizardFS master host to connect to.
## (Default: mfsmaster)
# MASTER_HOST = mfsmaster

## Master port to connect to (Default: 9420):
# MASTER_PORT = 9420

## Timeout (in seconds) for the master server connection (minimum is 0.01).
## (Default: 60)
# MASTER_TIMEOUT = 60

## IP address to listen on for client (mfsmount) connections:
# CSSERV_LISTEN_HOST = *

## Port to listen for client (mfsmount) connections.
## (Default: 9422)
# CSSERV_LISTEN_PORT = 9422

# NR_OF_NETWORK_WORKERS = 1
# NR_OF_HDD_WORKERS_PER_NETWORK_WORKER = 2
# BGJOBSCNT_PER_NETWORK_WORKER = 1000

# READ_AHEAD_KB = 0
# MAX_READ_BEHIND_KB = 0

## Name of volume configuration file.
## (Default: @ETC_PATH@/mfshdd.cfg)
# HDD_CONF_FILENAME = @ETC_PATH@/mfshdd.cfg

## Free space threshold to set volume as 100% utilized when there is less than given amount of free
## space left. This number is always added to the used disk space reported by chunkserver.
## (Default: 4GiB)
# HDD_LEAVE_SPACE_DEFAULT = 4GiB

## Chunk test period in seconds.
## (Default: 10)
# HDD_TEST_FREQ = 10

## Whether to remove each chunk from page when closing it to reduce cache pressure
## generated by chunkserver, boolean (0 means "no").
## (Default: 0)
# HDD_ADVISE_NO_CACHE = 0

## If enabled then chunkserver detects zero values in chunk data and frees
## corresponding file blocks (decreasing file system usage).
## This option works only on Linux
## with file systems supporting punching holes (XFS, ext4, Btrfs, tmpfs).
## (Default : 0)
# HDD_PUNCH_HOLES = 1

## If enabled, chunkserver will send periodical reports of its I/O load to master,
## which will be taken into consideration when picking chunkservers for I/O operations.
## (Default : 0)
# ENABLE_LOAD_FACTOR = 0

## Limit how many kilobytes can be replicated from other chunkservers to
## this chunkserver in every second (by default undefined, i.e. no limits)
# REPLICATION_BANDWIDTH_LIMIT_KBPS = 8192

## Number of threads which handle (in a round-robin manner) connections
## with clients; these threads are responsible for reading from
## sockets and coping data from internal buffers to sockets.
## (Default: 1)
# NR_OF_NETWORK_WORKERS = 1

## Number of threads that each network worker may use to do disk operations
## like opening chunks, reading or writing them
## (Default: 20)
# NR_OF_HDD_WORKERS_PER_NETWORK_WORKER = 20

## additional number of kilobytes which should be passed to
## posix_fadvise(POSIX_FADV_WILLNEED) before reading data from a chunk
## (Default: 0), i.e. use posix_fadvise only with the amount of data that is
##  really needed; the value is aligned down to 64 KiB.
# READ_AHEAD_KB = 0

## Try to fix out-of-order read requests; the value tells how much of
## skipped data to read if an offset of some read operation is greater than
## the offset where the previos operation finished
## (Default: 0), i.e. don't read any skipped data; the value is aligned down to 64 KiB.
# MAX_READ_BEHIND_KB = 0

## Whether to create new chunks in the MooseFS format
##    (signature + <checksum>* + <data block>*)
## or in the newer interleaved format
##    ([<checksum> <data block>]*).
## (Default: 1), i.e. new chunks are created in MooseFS format.
# CREATE_NEW_CHUNKS_IN_MOOSEFS_FORMAT = 1

## Call fsync() after a chunk is modified
## (Default: 1), i.e. enabled.
# PERFORM_FSYNC = 1

## Distance penalty to be added to the distance calculation used in mfstopology
## This penalty will be added to *all* distance calculations, including local
## clients
# DISTANCE_PENALTY = 0

## deprecated, to be removed.
# BACK_LOGS = 50
# CSSERV_TIMEOUT = 5

# REPLICATION_BANDWIDTH_LIMIT_KBPS = 102400
