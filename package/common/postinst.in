#In compilance with Securing Debian Manual section 9.2 Creating users and groups for software daemons
#http://www.debian.org/doc/manuals/securing-debian-howto/ch9.en.html#s-bpp-lower-privs

COMPONENT_NAME=master

# If the package has default file it could be sourced, so that
# the local admin can overwrite the defaults

[ -f "/etc/default/$COMPONENT_NAME" ] && . /etc/default/$COMPONENT_NAME

# Sane defaults:
[ -z "$SERVER_HOME" ] && SERVER_HOME=@DATA_PATH@
[ -z "$SERVER_USER" ] && SERVER_USER=@DEFAULT_USER@
[ -z "$SERVER_NAME" ] && SERVER_NAME="LizardFS service runner Server description"
[ -z "$SERVER_GROUP" ] && SERVER_GROUP=@DEFAULT_GROUP@ 

# Groups that the user will be added to, if undefined, then none.
ADDGROUP=adm

# create user to avoid running server as root
# 1. create group if not existing
if ! getent group | grep -q "^$SERVER_GROUP:"
then
  echo -n "Adding group $SERVER_GROUP.."
  groupadd --system $SERVER_GROUP  || true
  echo "..done"
else
  echo "Note: Using existing group $SERVER_GROUP to run daemon."
fi

# 2. create homedir if not existing
test -d $SERVER_HOME || mkdir --parents $SERVER_HOME

# 3. create user if not existing
if ! getent passwd | grep -q "^$SERVER_USER:"
then
  echo -n "Adding system user $SERVER_USER.."
  useradd --system \
          --gid $SERVER_GROUP \
          --no-create-home \
          $SERVER_USER  || true
  echo "..done"
else
  echo "Note: Using existing user $SERVER_USER to run daemon."
fi

# 4. adjust passwd entry
usermod -c "$SERVER_NAME" \
        -d $SERVER_HOME   \
        -g $SERVER_GROUP  \
        $SERVER_USER

# 5. adjust file and directory permissions
chown -R "$SERVER_USER:adm" $SERVER_HOME
chmod u=rwx,g=rxs,o= $SERVER_HOME

# 6. Add the user to the ADDGROUP group
if [ -n "$ADDGROUP" ]
then
  if ! groups $SERVER_USER | cut -d: -f2 | grep -q -w $ADDGROUP
  then
    usermod $SERVER_USER --groups $ADDGROUP
  fi
fi

